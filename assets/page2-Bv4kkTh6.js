import{G as h,S as b,N as m}from"./sigma-node-border.esm-xRRpOcT2.js";const y=document.getElementById("sigma-container"),c=document.getElementById("node-info"),r=document.getElementById("slider-points"),v=document.getElementById("window-display"),N=document.getElementById("toggle-labels"),a=new h,n={selectedNode:null,selectedNeighbors:null};let p=!0;const w=await fetch("public/field_color.json"),E=await w.json(),u={};E.forEach(e=>u[e.field]=e.color);function C(){const e=document.getElementById("legend-items");e.innerHTML="",Object.entries(u).forEach(([t,l])=>{const o=document.createElement("div");o.style.display="flex",o.style.alignItems="center",o.style.marginBottom="6px";const s=document.createElement("span");s.style.display="inline-block",s.style.width="20px",s.style.height="20px",s.style.backgroundColor=l,s.style.marginRight="10px",s.style.border="1px solid #000",s.style.flexShrink="0",o.appendChild(s);const d=document.createElement("span");d.textContent=t,o.appendChild(d),e.appendChild(o)})}const i=new b(a,y,{renderLabels:!0,nodeProgramClasses:{border:m}});i.setSetting("nodeReducer",(e,t)=>n.selectedNeighbors&&!n.selectedNeighbors.has(e)?{...t,label:"",color:"#f6f6f6"}:t);i.setSetting("edgeReducer",(e,t)=>n.selectedNeighbors&&n.selectedNode&&!a.hasExtremity(e,n.selectedNode)?{...t,hidden:!0}:t);i.on("clickNode",({node:e})=>{if(n.selectedNode===e)n.selectedNode=null,n.selectedNeighbors=null,c.style.display="none";else{n.selectedNode=e,n.selectedNeighbors=new Set(a.neighbors(e)),n.selectedNeighbors.add(e);const t=a.getNodeAttributes(e);c.innerHTML=`
<div><b>Node Information</b></div>
<div class="field"><span class="label">Title:</span><span class="value">${t.fullTitle??""}</span></div>
<div class="field"><span class="label">Authors:</span><span class="value">${t.authors??""}</span></div>
<div class="field"><span class="label">Date:</span><span class="value">${t.date??""}</span></div>
<div class="field"><span class="label">Citations:</span><span class="value">${t.citations??""}</span></div>
<div class="field"><span class="label">Cluster:</span><span class="value">${t.cluster??""}</span></div>
<div class="field"><span class="label">Domain:</span><span class="value">${t.domain??""}</span></div>
<div class="field"><span class="label">Field:</span><span class="value">${t.field??""}</span></div>`,c.style.display="block"}i.refresh()});i.on("clickStage",()=>{n.selectedNode=null,n.selectedNeighbors=null,c.style.display="none",i.refresh()});async function g(e){const t="/network_fields_aggregate",l=await fetch(`${t}/windows_field/nodes_window_${String(e+1).padStart(3,"0")}.json`).then(s=>s.json()),o=await fetch(`${t}/windows_field/edges_window_${String(e+1).padStart(3,"0")}.json`).then(s=>s.json());a.clear(),l.forEach(s=>{a.addNode(s.id,{...s,x:typeof s.x=="number"?s.x:Math.random(),y:typeof s.y=="number"?s.y:Math.random(),size:s.size,color:s.color??"#666",type:"border",borderColor:"#000",label:p?s.label?.length>30?s.label.slice(0,30)+"â€¦":s.label:"",fullTitle:s.label,opacity:1})}),o.forEach(s=>{const d=a.getNodeAttribute(s.source,"color")??"#999";a.addEdge(s.source,s.target,{...s,color:d,opacity:1})}),v.textContent=l.length>0&&l[0].window?l[0].window:`Window ${e+1}`,$(e),i.refresh()}const f=50;function x(){r.innerHTML="";for(let e=0;e<f;e++){const t=document.createElement("div");if(t.className="slider-point",t.style.left=e/(f-1)*100+"%",e%5===0){const l=document.createElement("div");l.className="tick-label",l.textContent=`${1970+e}-${1970+e+4}`,t.appendChild(l)}t.addEventListener("click",()=>g(e)),r.appendChild(t)}}function $(e){const t=r.children;for(let l=0;l<t.length;l++)t[l].classList.toggle("active",l===e)}N.addEventListener("click",()=>{p=!p,i.refresh();const e=Array.from(r.children).findIndex(t=>t.classList.contains("active"));e>=0&&g(e)});C();x();g(0);
