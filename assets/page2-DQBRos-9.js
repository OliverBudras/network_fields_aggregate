import{G as b,S as m,N as y}from"./sigma-node-border.esm-xRRpOcT2.js";const v=document.getElementById("sigma-container"),d=document.getElementById("node-info"),c=document.getElementById("slider-points"),N=document.getElementById("window-display"),w=document.getElementById("toggle-labels"),a=new b,l={selectedNode:null,selectedNeighbors:null};let r=!0;const p="/network_fields_aggregate",E=await fetch(`${p}/field_color.json`),C=await E.json(),h={};C.forEach(e=>h[e.field]=e.color);function x(){const e=document.getElementById("legend-items");e.innerHTML="",Object.entries(h).forEach(([s,n])=>{const t=document.createElement("div");t.style.display="flex",t.style.alignItems="center",t.style.marginBottom="6px";const o=document.createElement("span");o.style.display="inline-block",o.style.width="20px",o.style.height="20px",o.style.backgroundColor=n,o.style.marginRight="10px",o.style.border="1px solid #000",o.style.flexShrink="0",t.appendChild(o);const f=document.createElement("span");f.textContent=s,t.appendChild(f),e.appendChild(t)})}const i=new m(a,v,{renderLabels:!0,nodeProgramClasses:{border:y}});i.setSetting("nodeReducer",(e,s)=>l.selectedNeighbors&&!l.selectedNeighbors.has(e)?{...s,label:"",color:"#f6f6f6"}:s);i.setSetting("edgeReducer",(e,s)=>l.selectedNeighbors&&l.selectedNode&&!a.hasExtremity(e,l.selectedNode)?{...s,hidden:!0}:s);i.on("clickNode",({node:e})=>{if(l.selectedNode===e)l.selectedNode=null,l.selectedNeighbors=null,d.style.display="none";else{l.selectedNode=e,l.selectedNeighbors=new Set(a.neighbors(e)),l.selectedNeighbors.add(e);const s=a.getNodeAttributes(e);d.innerHTML=`
<div><b>Node Information</b></div>
<div class="field"><span class="label">Title:</span><span class="value">${s.fullTitle??""}</span></div>
<div class="field"><span class="label">Authors:</span><span class="value">${s.authors??""}</span></div>
<div class="field"><span class="label">Date:</span><span class="value">${s.date??""}</span></div>
<div class="field"><span class="label">Citations:</span><span class="value">${s.citations??""}</span></div>
<div class="field"><span class="label">Cluster:</span><span class="value">${s.cluster??""}</span></div>
<div class="field"><span class="label">Domain:</span><span class="value">${s.domain??""}</span></div>
<div class="field"><span class="label">Field:</span><span class="value">${s.field??""}</span></div>`,d.style.display="block"}i.refresh()});i.on("clickStage",()=>{l.selectedNode=null,l.selectedNeighbors=null,d.style.display="none",i.refresh()});async function g(e){const s=await fetch(`${p}/windows_field/nodes_window_${String(e+1).padStart(3,"0")}.json`).then(t=>t.json()),n=await fetch(`${p}/windows_field/edges_window_${String(e+1).padStart(3,"0")}.json`).then(t=>t.json());a.clear(),s.forEach(t=>{a.addNode(t.id,{...t,x:typeof t.x=="number"?t.x:Math.random(),y:typeof t.y=="number"?t.y:Math.random(),size:t.size,color:t.color??"#666",type:"border",borderColor:"#000",label:r?t.label?.length>30?t.label.slice(0,30)+"â€¦":t.label:"",fullTitle:t.label,opacity:1})}),n.forEach(t=>{const o=a.getNodeAttribute(t.source,"color")??"#999";a.addEdge(t.source,t.target,{...t,color:o,opacity:1})}),N.textContent=s.length>0&&s[0].window?s[0].window:`Window ${e+1}`,S(e),i.refresh()}const u=40;function $(){c.innerHTML="";for(let e=0;e<u;e++){const s=document.createElement("div");if(s.className="slider-point",s.style.left=e/(u-1)*100+"%",e%5===0){const n=document.createElement("div");n.className="tick-label",n.textContent=`${1980+e}-${1980+e+4}`,s.appendChild(n)}s.addEventListener("click",()=>g(e)),c.appendChild(s)}}function S(e){const s=c.children;for(let n=0;n<s.length;n++)s[n].classList.toggle("active",n===e)}w.addEventListener("click",()=>{r=!r,i.refresh();const e=Array.from(c.children).findIndex(s=>s.classList.contains("active"));e>=0&&g(e)});x();$();g(0);
