import{G as u,S as v,N as h}from"./sigma-node-border.esm-xRRpOcT2.js";const m=document.getElementById("sigma-container"),o=document.getElementById("node-info"),c=document.getElementById("slider-points"),w=document.getElementById("window-display"),y=document.getElementById("toggle-labels"),d=new u,a={selectedNode:null,selectedNeighbors:null};let r=!0;const t=new v(d,m,{renderLabels:!0,nodeProgramClasses:{border:h}});t.setSetting("labelRenderedSizeThreshold",0);t.setSetting("nodeReducer",(s,e)=>a.selectedNeighbors&&!a.selectedNeighbors.has(s)?{...e,color:"#f6f6f6"}:e);t.setSetting("edgeReducer",(s,e)=>a.selectedNeighbors&&a.selectedNode&&!d.hasExtremity(s,a.selectedNode)?{...e,hidden:!0}:e);t.on("clickNode",({node:s})=>{if(a.selectedNode===s)a.selectedNode=null,a.selectedNeighbors=null,o.style.display="none";else{a.selectedNode=s,a.selectedNeighbors=new Set(d.neighbors(s)),a.selectedNeighbors.add(s);const e=d.getNodeAttributes(s);o.innerHTML=`
<div><b>Node Information</b></div>
<div class="field"><span class="label">Field:</span><span class="value">${e.id??""}</span></div>
<div class="field"><span class="label">Citations:</span><span class="value">${e.citations??""}</span></div>
<div class="field"><span class="label">Nodes:</span><span class="value">${e.numbernodes??""}</span></div>
<div class="field"><span class="label">Degree:</span><span class="value">${e.degree??""}</span></div>
<div class="field"><span class="label">Betweeness:</span><span class="value">${e.betweeness??""}</span></div>
<div class="field"><span class="label">Closeness:</span><span class="value">${e.closeness??""}</span></div>
<div class="field"><span class="label">Edges (Between):</span><span class="value">${e.between_edges??""}</span></div>
<div class="field"><span class="label">Edges (Within):</span><span class="value">${e.withinedges??""}</span></div>
<div class="field"><span class="label">Edges (Total):</span><span class="value">${e.totaledges??""}</span></div>
<div class="field"><span class="label">External Edge Ratio:</span><span class="value">${e.externalratio??""}</span></div>
<div class="field"><span class="label">Internal Edge Ratio:</span><span class="value">${e.internalratio??""}</span></div>`,o.style.display="block"}t.refresh()});t.on("clickStage",()=>{a.selectedNode=null,a.selectedNeighbors=null,o.style.display="none",t.refresh()});async function p(s){const e="/network_fields_aggregate",g=s+11,i=await fetch(`${e}/windows_field_aggregate/nodes_window_${String(g).padStart(3,"0")}.json`).then(l=>l.json()),b=await fetch(`${e}/windows_field_aggregate/edges_window_${String(g).padStart(3,"0")}.json`).then(l=>l.json());d.clear(),i.forEach(l=>{d.addNode(l.id,{...l,x:typeof l.x=="number"?l.x:Math.random(),y:typeof l.y=="number"?l.y:Math.random(),size:l.size_nodes,color:l.color??"#666",type:"border",borderColor:"#000",label:r?l.label?.length>30?l.label.slice(0,30)+"â€¦":l.label:"",fullTitle:l.label,opacity:1})}),b.forEach(l=>{d.addEdge(l.source,l.target,{...l,color:"rgba(0,0,0,0.2)"})}),w.textContent=i.length>0&&i[0].window?i[0].window:`Window ${s+1}`,E(s),t.refresh()}const f=40;function N(){c.innerHTML="";for(let s=0;s<f;s++){const e=document.createElement("div");if(e.className="slider-point",e.style.left=s/(f-1)*100+"%",s%5===0){const n=document.createElement("div");n.className="tick-label",n.textContent=`${1980+s}-${1980+s+4}`,e.appendChild(n)}e.addEventListener("click",()=>p(s)),c.appendChild(e)}}function E(s){const e=c.children;for(let n=0;n<e.length;n++)e[n].classList.toggle("active",n===s)}y.addEventListener("click",()=>{r=!r,t.refresh();const s=Array.from(c.children).findIndex(e=>e.classList.contains("active"));s>=0&&p(s)});N();p(0);
