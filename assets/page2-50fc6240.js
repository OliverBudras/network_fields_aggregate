import{G as m,S as y,N as v}from"./sigma-node-border.esm-f57be0f2.js";const w=document.getElementById("sigma-container"),c=document.getElementById("node-info"),r=document.getElementById("slider-points"),N=document.getElementById("window-display"),x=document.getElementById("toggle-labels"),i=new m,n={selectedNode:null,selectedNeighbors:null};let p=!0;const f="/network_fields_aggregate",E=await fetch(`${f}/field_color.json`),C=await E.json(),h={};C.forEach(e=>h[e.field]=e.color);function $(){const e=document.getElementById("legend-items");e.innerHTML="",Object.entries(h).forEach(([s,l])=>{const o=document.createElement("div");o.style.display="flex",o.style.alignItems="center",o.style.marginBottom="6px";const a=document.createElement("span");a.style.display="inline-block",a.style.width="20px",a.style.height="20px",a.style.backgroundColor=l,a.style.marginRight="10px",a.style.border="1px solid #000",a.style.flexShrink="0",o.appendChild(a);const t=document.createElement("span");t.textContent=s,o.appendChild(t),e.appendChild(o)})}const d=new y(i,w,{renderLabels:!0,nodeProgramClasses:{border:v}});d.setSetting("nodeReducer",(e,s)=>n.selectedNeighbors&&!n.selectedNeighbors.has(e)?{...s,label:"",color:"#f6f6f6"}:s);d.setSetting("edgeReducer",(e,s)=>n.selectedNeighbors&&n.selectedNode&&!i.hasExtremity(e,n.selectedNode)?{...s,hidden:!0}:s);d.on("clickNode",({node:e})=>{if(n.selectedNode===e)n.selectedNode=null,n.selectedNeighbors=null,c.style.display="none";else{n.selectedNode=e,n.selectedNeighbors=new Set(i.neighbors(e)),n.selectedNeighbors.add(e);const s=i.getNodeAttributes(e);c.innerHTML=`
<div><b>Node Information</b></div>
<div class="field"><span class="label">Title:</span><span class="value">${s.fullTitle??""}</span></div>
<div class="field"><span class="label">Authors:</span><span class="value">${s.authors??""}</span></div>
<div class="field"><span class="label">Date:</span><span class="value">${s.date??""}</span></div>
<div class="field"><span class="label">Citations:</span><span class="value">${s.citations??""}</span></div>
<div class="field"><span class="label">Cluster:</span><span class="value">${s.cluster??""}</span></div>
<div class="field"><span class="label">Domain:</span><span class="value">${s.domain??""}</span></div>
<div class="field"><span class="label">Field:</span><span class="value">${s.field??""}</span></div>`,c.style.display="block"}d.refresh()});d.on("clickStage",()=>{n.selectedNode=null,n.selectedNeighbors=null,c.style.display="none",d.refresh()});async function g(e){const l=e+11,o=await fetch(`${f}/windows_field/nodes_window_${String(l).padStart(3,"0")}.json`).then(t=>t.json()),a=await fetch(`${f}/windows_field/edges_window_${String(l).padStart(3,"0")}.json`).then(t=>t.json());i.clear(),o.forEach(t=>{i.addNode(t.id,{...t,x:typeof t.x=="number"?t.x:Math.random(),y:typeof t.y=="number"?t.y:Math.random(),size:t.size,color:t.color??"#666",type:"border",borderColor:"#000",label:p?t.label?.length>30?t.label.slice(0,30)+"â€¦":t.label:"",fullTitle:t.label,opacity:1})}),a.forEach(t=>{const b=i.getNodeAttribute(t.source,"color")??"#999";i.addEdge(t.source,t.target,{...t,color:b,opacity:1})}),N.textContent=o.length>0&&o[0].window?o[0].window:`Window ${e+1}`,k(e),d.refresh()}const u=40;function S(){r.innerHTML="";for(let e=0;e<u;e++){const s=document.createElement("div");if(s.className="slider-point",s.style.left=e/(u-1)*100+"%",e%5===0){const l=document.createElement("div");l.className="tick-label",l.textContent=`${1980+e}-${1980+e+4}`,s.appendChild(l)}s.addEventListener("click",()=>g(e)),r.appendChild(s)}}function k(e){const s=r.children;for(let l=0;l<s.length;l++)s[l].classList.toggle("active",l===e)}x.addEventListener("click",()=>{p=!p,d.refresh();const e=Array.from(r.children).findIndex(s=>s.classList.contains("active"));e>=0&&g(e)});$();S();g(0);
