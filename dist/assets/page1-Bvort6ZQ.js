import{G as b,S as f,N as u}from"./sigma-node-border.esm-xRRpOcT2.js";const v=document.getElementById("sigma-container"),d=document.getElementById("node-info"),o=document.getElementById("slider-points"),h=document.getElementById("window-display"),m=document.getElementById("toggle-labels"),i=new b,n={selectedNode:null,selectedNeighbors:null};let c=!0;const t=new f(i,v,{renderLabels:!0,nodeProgramClasses:{border:u}});t.setSetting("labelRenderedSizeThreshold",0);t.setSetting("nodeReducer",(s,e)=>n.selectedNeighbors&&!n.selectedNeighbors.has(s)?{...e,color:"#f6f6f6"}:e);t.setSetting("edgeReducer",(s,e)=>n.selectedNeighbors&&n.selectedNode&&!i.hasExtremity(s,n.selectedNode)?{...e,hidden:!0}:e);t.on("clickNode",({node:s})=>{if(n.selectedNode===s)n.selectedNode=null,n.selectedNeighbors=null,d.style.display="none";else{n.selectedNode=s,n.selectedNeighbors=new Set(i.neighbors(s)),n.selectedNeighbors.add(s);const e=i.getNodeAttributes(s);d.innerHTML=`
<div><b>Node Information</b></div>
<div class="field"><span class="label">Field:</span><span class="value">${e.id??""}</span></div>
<div class="field"><span class="label">Citations:</span><span class="value">${e.citations??""}</span></div>
<div class="field"><span class="label">Nodes:</span><span class="value">${e.numbernodes??""}</span></div>
<div class="field"><span class="label">Degree:</span><span class="value">${e.degree??""}</span></div>
<div class="field"><span class="label">Betweeness:</span><span class="value">${e.betweeness??""}</span></div>
<div class="field"><span class="label">Closeness:</span><span class="value">${e.closeness??""}</span></div>
<div class="field"><span class="label">Edges (Between):</span><span class="value">${e.between_edges??""}</span></div>
<div class="field"><span class="label">Edges (Within):</span><span class="value">${e.withinedges??""}</span></div>
<div class="field"><span class="label">Edges (Total):</span><span class="value">${e.totaledges??""}</span></div>
<div class="field"><span class="label">External Edge Ratio:</span><span class="value">${e.externalratio??""}</span></div>
<div class="field"><span class="label">Internal Edge Ratio:</span><span class="value">${e.internalratio??""}</span></div>`,d.style.display="block"}t.refresh()});t.on("clickStage",()=>{n.selectedNode=null,n.selectedNeighbors=null,d.style.display="none",t.refresh()});async function r(s){const e="/network_fields_aggregate",a=await fetch(`${e}/windows_field_aggregate/nodes_window_${String(s+1).padStart(3,"0")}.json`).then(l=>l.json()),g=await fetch(`${e}/windows_field_aggregate/edges_window_${String(s+1).padStart(3,"0")}.json`).then(l=>l.json());i.clear(),a.forEach(l=>{i.addNode(l.id,{...l,x:typeof l.x=="number"?l.x:Math.random(),y:typeof l.y=="number"?l.y:Math.random(),size:l.size_nodes,color:l.color??"#666",type:"border",borderColor:"#000",label:c?l.label?.length>30?l.label.slice(0,30)+"â€¦":l.label:"",fullTitle:l.label,opacity:1})}),g.forEach(l=>{i.addEdge(l.source,l.target,{...l,color:"rgba(0,0,0,0.2)"})}),h.textContent=a.length>0&&a[0].window?a[0].window:`Window ${s+1}`,y(s),t.refresh()}const p=50;function w(){o.innerHTML="";for(let s=0;s<p;s++){const e=document.createElement("div");if(e.className="slider-point",e.style.left=s/(p-1)*100+"%",s%5===0){const a=document.createElement("div");a.className="tick-label",a.textContent=`${1970+s}-${1970+s+4}`,e.appendChild(a)}e.addEventListener("click",()=>r(s)),o.appendChild(e)}}function y(s){const e=o.children;for(let a=0;a<e.length;a++)e[a].classList.toggle("active",a===s)}m.addEventListener("click",()=>{c=!c,t.refresh();const s=Array.from(o.children).findIndex(e=>e.classList.contains("active"));s>=0&&r(s)});w();r(0);
